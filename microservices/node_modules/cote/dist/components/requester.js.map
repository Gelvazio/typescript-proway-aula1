{"version":3,"sources":["../../src/components/requester.js"],"names":["Configurable","require","Monitorable","Component","axon","module","exports","Requester","constructor","advertisement","discoveryOptions","sock","types","type","set","timeout","process","env","COTE_REQUEST_TIMEOUT","startDiscovery","onAdded","obj","address","useHostNames","hostName","alreadyConnected","socks","some","s","_host","remoteAddress","remotePort","port","connect","send","args","hasCallback","length","__timeout","sendOverSocket","Promise","resolve","reject","err","res","oppo","cb","pop","timeoutHandle","setTimeout","callbacks","messageCallback","id","Error","clearTimeout"],"mappings":"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","sourcesContent":["const Configurable = require('./configurable');\nconst Monitorable = require('./monitorable');\nconst Component = require('./component');\nconst axon = require('@dashersw/axon');\n\nmodule.exports = class Requester extends Monitorable(Configurable(Component)) {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.sock = new axon.types[this.type]();\n        this.sock.set('retry timeout', 0);\n        this.timeout = advertisement.timeout || process.env.COTE_REQUEST_TIMEOUT;\n\n        this.startDiscovery();\n    }\n\n    onAdded(obj) {\n        super.onAdded(obj);\n\n        const address = this.constructor.useHostNames ? obj.hostName : obj.address;\n\n        const alreadyConnected = this.sock.socks.some((s) =>\n            (this.constructor.useHostNames ? s._host == obj.hostName : s.remoteAddress == address) &&\n             s.remotePort == obj.advertisement.port);\n\n        if (alreadyConnected) return;\n\n        this.sock.connect(obj.advertisement.port, address);\n    }\n\n    send(...args) {\n        const hasCallback = typeof args[args.length - 1] == 'function';\n        const timeout = args[0].__timeout || this.timeout;\n\n        if (hasCallback) return sendOverSocket(this.sock, timeout, ...args);\n\n        return new Promise((resolve, reject) => {\n            sendOverSocket(this.sock, timeout, ...args, (err, res) => {\n                if (err) return reject(err);\n                resolve(res);\n            });\n        });\n    }\n\n    get type() {\n        return 'req';\n    }\n    get oppo() {\n        return 'rep';\n    }\n};\n\nfunction sendOverSocket(sock, timeout, ...args) {\n    if (!timeout) return sock.send(...args);\n\n    const cb = args.pop();\n\n    const timeoutHandle = setTimeout(() => {\n        delete sock.callbacks[messageCallback.id];\n        cb(new Error('Request timed out.'));\n    }, timeout);\n\n    const messageCallback = (...args) => {\n        clearTimeout(timeoutHandle);\n        cb(...args);\n    };\n\n    sock.send(...args, messageCallback);\n}\n"],"file":"requester.js"}